name: workflows test-monorepo
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ariwijayaikd
  IMAGE_NAME: test-monorepo
  IMAGE_GO_TAG: go-v1.0.${{ github.run_number }}
  IMAGE_GO_TAG_LATEST: go-latest
  IMAGE_NODE_TAG: node-v1.0.${{ github.run_number }}
  IMAGE_NODE_TAG_LATEST: node-latest
  REGISTRY_GH: ghcr.io
  IMAGE_NAME_GH: ariwijayaikd/test-monorepo

jobs:
  test-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run Go tests
        working-directory: ./go
        run: go test ./...
        
  build-go:
    runs-on: ubuntu-latest
    needs: test-go
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ${{ env.REGISTRY_GH }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GH }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USER_REGISTRY }}
          password: ${{ secrets.PASSWORD_REGISTRY }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_GH }}/${{ env.IMAGE_NAME_GH }}

      - name: Build push ${{ env.REGISTRY_GH }} and ${{ env.REGISTRY }}
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./go
          file: ./go/go.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY_GH }}/${{ env.IMAGE_NAME_GH }}:${{ env.IMAGE_GO_TAG }} , ${{ env.REGISTRY_GH }}/${{ env.IMAGE_NAME_GH }}:${{ env.IMAGE_GO_TAG_LATEST }} ,
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_GO_TAG }} , ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_GO_TAG_LATEST }}
          labels: ${{ steps.meta.outputs.labels }}

  test-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Run Node.js tests
        working-directory: ./node
        run: |
          npm install
          npm test

  build-node:
    runs-on: ubuntu-latest
    needs: test-node
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ${{ env.REGISTRY_GH }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GH }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USER_REGISTRY }}
          password: ${{ secrets.PASSWORD_REGISTRY }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_GH }}/${{ env.IMAGE_NAME_GH }}

      - name: Build push ${{ env.REGISTRY_GH }} and ${{ env.REGISTRY }}
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./node
          file: ./node/node.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY_GH }}/${{ env.IMAGE_NAME_GH }}:${{ env.IMAGE_NODE_TAG }} , ${{ env.REGISTRY_GH }}/${{ env.IMAGE_NAME_GH }}:${{ env.IMAGE_NODE_TAG_LATEST }} ,
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_NODE_TAG }} , ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_NODE_TAG_LATEST }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-go:
    runs-on: ubuntu-latest
    needs: [build-go]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Dummy deploy to k8s
        run: echo "kubectl apply -f k8s/go/"

  deploy-node:
    runs-on: ubuntu-latest
    needs: [build-node]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Dummy deploy to k8s
        run: echo "kubectl apply -f k8s/node/"